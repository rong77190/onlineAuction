<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.auction.dao.TorderMapper" >
  <resultMap id="BaseResultMap" type="com.auction.model.Torder" >
    <id column="order_id" property="orderId" jdbcType="INTEGER" />
    <result column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="good_id" property="goodId" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="order_price" property="orderPrice" jdbcType="DOUBLE" />
    <result column="order_state" property="orderState" jdbcType="INTEGER" />
    <result column="pay_way" property="payWay" jdbcType="INTEGER" />
    <result column="update_by" property="updateBy" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    order_id, user_id, good_id, create_time, update_time, order_price, order_state, pay_way,
    update_by
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select
    <include refid="Base_Column_List" />
    from torder
    where order_id = #{orderId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from torder
    where order_id = #{orderId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.auction.model.Torder" >
    insert into torder (order_id, user_id, good_id,
    create_time, update_time, order_price,
    order_state, pay_way, update_by
    )
    values (#{orderId,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{goodId,jdbcType=INTEGER},
    #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, #{orderPrice,jdbcType=DOUBLE},
    #{orderState,jdbcType=INTEGER}, #{payWay,jdbcType=INTEGER}, #{updateBy,jdbcType=INTEGER}
    )
  </insert>
  <insert id="insertSelective" parameterType="com.auction.model.Torder" >
    insert into torder
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="orderId != null" >
        order_id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="goodId != null" >
        good_id,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="orderPrice != null" >
        order_price,
      </if>
      <if test="orderState != null" >
        order_state,
      </if>
      <if test="payWay != null" >
        pay_way,
      </if>
      <if test="updateBy != null" >
        update_by,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="orderId != null" >
        #{orderId,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="goodId != null" >
        #{goodId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="orderPrice != null" >
        #{orderPrice,jdbcType=DOUBLE},
      </if>
      <if test="orderState != null" >
        #{orderState,jdbcType=INTEGER},
      </if>
      <if test="payWay != null" >
        #{payWay,jdbcType=INTEGER},
      </if>
      <if test="updateBy != null" >
        #{updateBy,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.auction.model.Torder" >
    update torder
    <set >
      <if test="userId != null" >
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="goodId != null" >
        good_id = #{goodId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="orderPrice != null" >
        order_price = #{orderPrice,jdbcType=DOUBLE},
      </if>
      <if test="orderState != null" >
        order_state = #{orderState,jdbcType=INTEGER},
      </if>
      <if test="payWay != null" >
        pay_way = #{payWay,jdbcType=INTEGER},
      </if>
      <if test="updateBy != null" >
        update_by = #{updateBy,jdbcType=INTEGER},
      </if>
    </set>
    where order_id = #{orderId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.auction.model.Torder" >
    update torder
    set user_id = #{userId,jdbcType=INTEGER},
    good_id = #{goodId,jdbcType=INTEGER},
    create_time = #{createTime,jdbcType=TIMESTAMP},
    update_time = #{updateTime,jdbcType=TIMESTAMP},
    order_price = #{orderPrice,jdbcType=DOUBLE},
    order_state = #{orderState,jdbcType=INTEGER},
    pay_way = #{payWay,jdbcType=INTEGER},
    update_by = #{updateBy,jdbcType=INTEGER}
    where order_id = #{orderId,jdbcType=INTEGER}
  </update>


  <!--补充-->
  <select id="selectbuyerid" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select
    good.buyer_id
    from torder,good
    where torder.order_id = #{orderId,jdbcType=INTEGER} AND torder.good_id=good.good_id
  </select>
  <select id="selectsellerid" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select
    good.seller_id
    from torder,good
    where torder.order_id = #{orderId,jdbcType=INTEGER} AND torder.good_id=good.good_id
  </select>




  <!--订单管理模块-->
  <!-- 订单查询 -->

  <resultMap id="OrderBeanResult" type="com.auction.bean.OrderBean">
    <id column="order_id" property="orderId" jdbcType="INTEGER" />
    <result column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="good_id" property="goodId" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="order_price" property="orderPrice" jdbcType="DOUBLE" />
    <result column="order_state" property="orderState" jdbcType="INTEGER" />
    <result column="pay_way" property="payWay" jdbcType="INTEGER" />
    <result column="update_by" property="updateBy" jdbcType="INTEGER" />
    <result column="good_name" property="goodName" jdbcType="VARCHAR"/>
    <result column="user_name" property="userName" jdbcType="VARCHAR"/>
  </resultMap>
  <select id="find" parameterType="Map" resultMap="OrderBeanResult">
    select  t.order_id, t.user_id, t.good_id, t.create_time, t.update_time, t.order_price, t.order_state, t.pay_way,
    t.update_by,u.user_name,g.good_name
    from
    torder t
    INNER  JOIN `user` u
    INNER join good g
    on u.user_id = t.user_id  AND g.good_id = t.good_id
    <where>
      <if test="goodName!=null and goodName!='' ">
        and good_name like #{goodName}
      </if>
      <if test="userName!=null and userName!='' ">
        and user_name like #{userName}
      </if>
      <if test="orderId!=null and orderId!='' ">
        and order_id like #{orderId}
      </if>
      <if test="orderState!=null and orderState!='' ">
        and order_state like #{orderState}
      </if>
    </where>
    <if test="start!=null and size!=null">
      limit #{start},#{size}
    </if>

  </select>

  <select id="getTotal" parameterType="Map" resultType="Long">
    select count(*)
    from torder t
    INNER  JOIN `user` u
    INNER join good g
    on u.user_id = t.user_id  AND g.good_id = t.good_id
    <where>
      <if test="goodName!=null and goodName!='' ">
        and good_name like #{goodName}
      </if>
      <if test="userName!=null and userName!='' ">
        and user_name like #{userName}
      </if>
      <if test="orderId!=null and orderId!='' ">
        and order_id like #{orderId}
      </if>
      <if test="orderState!=null and orderState!='' ">
        and order_state like #{orderState}
      </if>
    </where>
  </select>

</mapper>