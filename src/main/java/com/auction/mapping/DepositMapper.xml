<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.auction.dao.DepositMapper" >
  <resultMap id="BaseResultMap" type="com.auction.model.Deposit" >
    <id column="deposit_id" property="depositId" jdbcType="INTEGER" />
    <result column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="good_id" property="goodId" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="price" property="price" jdbcType="DECIMAL" />
    <result column="state" property="state" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    deposit_id, user_id, good_id, create_time, price, state
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from deposit
    where deposit_id = #{depositId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from deposit
    where deposit_id = #{depositId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.auction.model.Deposit" >
    insert into deposit (deposit_id, user_id, good_id, 
      create_time, price, state
      )
    values (#{depositId,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{goodId,jdbcType=INTEGER}, 
      #{createTime,jdbcType=TIMESTAMP}, #{price,jdbcType=DECIMAL}, #{state,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.auction.model.Deposit" >
    insert into deposit
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="depositId != null" >
        deposit_id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="goodId != null" >
        good_id,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="price != null" >
        price,
      </if>
      <if test="state != null" >
        state,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="depositId != null" >
        #{depositId,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="goodId != null" >
        #{goodId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="price != null" >
        #{price,jdbcType=DECIMAL},
      </if>
      <if test="state != null" >
        #{state,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.auction.model.Deposit" >
    update deposit
    <set >
      <if test="userId != null" >
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="goodId != null" >
        good_id = #{goodId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="price != null" >
        price = #{price,jdbcType=DECIMAL},
      </if>
      <if test="state != null" >
        state = #{state,jdbcType=INTEGER},
      </if>
    </set>
    where deposit_id = #{depositId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.auction.model.Deposit" >
    update deposit
    set user_id = #{userId,jdbcType=INTEGER},
      good_id = #{goodId,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      price = #{price,jdbcType=DECIMAL},
      state = #{state,jdbcType=INTEGER}
    where deposit_id = #{depositId,jdbcType=INTEGER}
  </update>
</mapper>